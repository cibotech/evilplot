apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  # AJKX name: scala-ci-evilplot-{{ .Values.ci.revision | trunc 10 }}
  name: scala-ci-evilplot-{{ .Values.ci.revision | trunc 10 }}-{{ .Values.ci.script | sha1sum | trunc 5 }}
  labels:
    scala-ci: evilplot
spec:
  arguments: {}
  entrypoint: sbt-release
  templates:
  - inputs: {}
    metadata: {}
    name: sbt-release
    outputs: {}
    sidecars:
    - name: xvfb
      image: {{ .Values.ci.xvfbImage }}
      command: [/bin/sh,-c]
      args:
      - |
        cd $HOME &&
        xvfb-run --auto-servernum --auth-file $HOME/.xauth/Xauthority --listen-tcp sleep 3600
      resources:
        requests:
          cpu: '1'
          memory: 6Gi
        limits:
          cpu: '7'
          memory: 6Gi
      volumeMounts:
        - name: xauth
          mountPath: /home/jenkins/.xauth
    script:
      image: {{ .Values.ci.image }}
      command: [/bin/sh]
      # AJKX source: {{ .Values.ci.script | quote }}
      source: |
        echo hello world
        . /scripts/utils.sh
        cd "$HOME"
        repo=cibotech/evilplot # AJKX
        repo_name=evilplot # AJKX parameterize
        git clone "https://x-access-token:$(cat $HOME/.github/token)@github.com/$repo.git/"
        cd "$repo_name"
        tag="$( git tag -n --sort=-taggerdate | grep 'Releasing ' | cut -d\  -f1 | head -1 )"
        git checkout "$tag"
        echo bootstrapping
        cp /sonatype/sonatype_credentials sonatype_credentials.sbt
        gpg --batch --import --passphrase-fd 0 /sonatype/key </sonatype/passphrase
        printf "expire\n10w\nsave\n" | gpg --batch --pinentry-mode loopback \
            --command-fd 0 --status-fd=2 --passphrase-fd 3 \
            --edit-key devops@cibotechnologies.com 3</sonatype/passphrase \

        export SBT_OPTS="-XX:MaxRAMPercentage=70 -XX:MaxMetaspaceSize=2048M"
        echo sbt.version=1.9.9 > project/build.properties # AJKX delete me
        # AJKX sbt update
        version="$( cut -d\" -f2 version.sbt )"
        version="$( cut -d\" -f2 version.sbt )-ajkx" # AJKX delete me
        echo 'libraryDependencies += "io.github.cibotech" %% "'"$repo_name"'" % "'"$version"'"' > self.sbt
        echo checking for existing artifact
        if sbt update ; then
          echo '{"event":"already_released","version":"'"$version"'"}'
        else
          version="$( cut -d\" -f2 version.sbt )" # AJKX delete me
          echo '{"event":"releasing","version":"'"$version"'"}'
          rm self.sbt

          printf '
            import sbtrelease.ReleasePlugin.autoImport.ReleaseTransformations._

            releaseProcess := Seq[ReleaseStep](
              publishArtifacts,
              releaseStepCommandAndRemaining("+publishSigned"),
              releaseStepCommand("sonatypeBundleRelease")
            )

            releaseCrossBuild := true
          ' > release.sbt
          export DISPLAY=:99
          export XAUTHORITY=$HOME/.xauth/Xauthority
          echo 'addSbtPlugin("com.github.sbt" % "sbt-pgp" % "2.3.0")' > project/sbt-pgp.sbt # AJKX
          sbt publishSigned
          sbt "release with-defaults" || true # AJKX only || true in dev
        fi
      resources:
        requests:
          cpu: '11'
          memory: 9Gi
        limits:
          cpu: '21'
          memory: 9Gi
      volumeMounts:
        - name: github-cibo-app-token
          mountPath: "/home/user/.github"
          readOnly: true
        - name: scripts
          mountPath: /scripts
        - name: xauth
          mountPath: /home/jenkins/.xauth
        - name: sonatype
          mountPath: /sonatype
    volumes:
      - name: xauth
        emptyDir: {}
      - name: github-cibo-app-token
        secret:
          secretName: github-cibo-app-token
      - name: scripts
        configMap:
          name: ci-scripts
          defaultMode: 0755
      - name: sonatype
        secret:
          secretName: sonatype
