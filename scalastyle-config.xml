<scalastyle>
    <name>Scalastyle standard configuration</name>

    <!-- List of all available rules is at http://www.scalastyle.org/rules-0.8.0.html -->


    <!-- Structure -->

    <check level="warning" class="org.scalastyle.file.FileLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxFileLength"><![CDATA[800]]></parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLineLength"><![CDATA[160]]></parameter>
            <parameter name="tabSize"><![CDATA[2]]></parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.file.HeaderMatchesChecker" enabled="false">
        <parameters>
            <parameter name="header"><![CDATA[]]></parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
        <parameters>
            <parameter name="maxParameters"><![CDATA[10]]></parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.scalariform.NonASCIICharacterChecker" enabled="true"/>

    <check level="warning" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
        <parameters>
            <parameter name="maxTypes"><![CDATA[30]]></parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="false">
        <parameters>
            <parameter name="maxMethods"><![CDATA[30]]></parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.scalariform.IfBraceChecker" enabled="false">
        <parameters>
            <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
            <parameter name="doubleLineAllowed"><![CDATA[true]]></parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="false">
        <parameters>
            <parameter name="maxLength"><![CDATA[50]]></parameter>
        </parameters>
    </check>



    <!-- Whitespace -->

    <check level="warning" class="org.scalastyle.file.FileTabChecker" enabled="true"/>

    <check level="warning" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true"/>

    <check level="warning" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="false"/>

    <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="false"/>
	
	<check level="warning" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true"/>

    <check level="warning" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true"/>

    <check level="warning" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"/>

    <check level="warning" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"/>

    <check level="warning" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"/>

    <check level="warning" class="org.scalastyle.scalariform.DisallowSpaceBeforeTokenChecker" enabled="false">
        <parameters>
            <!-- https://github.com/scala-ide/scalariform/blob/master/scalariform/src/main/scala/scalariform/lexer/Tokens.scala -->
            <parameter name="tokens">COLON, COMMA, RPAREN</parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.scalariform.DisallowSpaceAfterTokenChecker" enabled="false">
        <parameters>
            <!-- https://github.com/scala-ide/scalariform/blob/master/scalariform/src/main/scala/scalariform/lexer/Tokens.scala -->
            <parameter name="tokens">LPAREN</parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.scalariform.EnsureSingleSpaceBeforeTokenChecker" enabled="false">
        <parameters>
            <!-- https://github.com/scala-ide/scalariform/blob/master/scalariform/src/main/scala/scalariform/lexer/Tokens.scala -->
            <parameter name="tokens">ELSE, FINALLY, LINE_COMMENT, MATCH</parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.scalariform.EnsureSingleSpaceAfterTokenChecker" enabled="false">
        <parameters>
            <!-- https://github.com/scala-ide/scalariform/blob/master/scalariform/src/main/scala/scalariform/lexer/Tokens.scala -->
            <parameter name="tokens">ARROW, COLON, COMMA, ELSE, EQUALS, FINALLY, FOR, IF, MATCH, TRY, WHILE, YIELD</parameter>
        </parameters>
    </check>



    <!-- Naming -->

    <check level="warning" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="false">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>
        </parameters>
    </check>



    <!-- Correctness -->

    <check level="error" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"/>

    <check level="error" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
        <parameters>
            <parameter name="illegalImports"><![CDATA[sun._]]></parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.scalariform.NotImplementedErrorUsage" enabled="true"/>

    <check level="warning" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="false">
        <parameters>
            <parameter name="ignore"><![CDATA[-1,0,1,2,3]]></parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.scalariform.TodoCommentChecker" enabled="true">
        <parameters>
            <parameter name="words">TODO|FIXME</parameter>
        </parameters>
    </check>

    <check level="warning" class="org.scalastyle.scalariform.DeprecatedJavaChecker" enabled="true"/>

    <check level="error" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"/>

    <check level="warning" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"/>

    <check level="warning" class="org.scalastyle.scalariform.NullChecker" enabled="true"/>

    <check level="warning" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"/>

    <check level="error" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"/>

    <check level="warning" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"/>

    <check level="warning" class="org.scalastyle.scalariform.ProcedureDeclarationChecker" enabled="true"/>

    <check level="warning" class="org.scalastyle.scalariform.RedundantIfChecker" enabled="true"/>

    <check level="warning" class="org.scalastyle.scalariform.VarFieldChecker" enabled="true"/>

    <check level="error" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"/>

    <check level="warning" class="org.scalastyle.scalariform.LowercasePatternMatchChecker" enabled="false" />

    <check level="warning" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true"/>

</scalastyle>